<div id="header">
  <h1><%= @project.name %></h1>

  <div id="current_status">
    <label for="reading1"><%= @project.sensor1_name %></label><span id="reading1">NULL</span>
    <br/>
    <label for="reading2"><%= @project.sensor2_name %></label><span id="reading2">NULL</span>
    <br/>
    <label id="status">DISCONNECTED</label>
  </div>

  <div id="nav">
    <%= link_to 'Home', projects_path %> |
    <%= link_to 'Edit Project', edit_project_path(@project) %>
  </div>
</div>

<div id="chart"></div>

<script type="text/javascript">

  var data = null;
  var newestTimestamp = null;
  var graph = null;
  var lastGraphRefresh = null;
  var graphRefreshInterval = 10 * 1000; // in milliseconds

  renewData();

  function renewData() {
    $.getJSON('<%= project_data_path(@project) %>', {after: newestTimestamp}, function (json) {

      if (json.connected) {
        $("#status").html("Connected").css("color", "black");
      } else {
        $("#status").html("DISCONNECTED").css("color", "red");
      }

      if (json.readings.length > 0) {
        var mappedData = _.map(json.readings, function(r) {
          return [new Date(r.timestamp), to_f(r.value1), to_f(r.value2)];
        });

        if (data == null) {
          data = mappedData;
        } else {
          data = data.concat(mappedData);
        }

        var lastReading = data[data.length - 1];

        if (lastReading) {
          newestTimestamp = lastReading[0];
          $("#reading1").html(lastReading[1]);
          $("#reading2").html(lastReading[2]);
        }

        if (graph == null) {
          buildGraph();
          lastGraphRefresh = Date.now();
        } else if ((Date.now() - lastGraphRefresh) >= graphRefreshInterval) {
          graph.updateOptions({file: data});
          lastGraphRefresh = Date.now();
        }
      }

      setTimeout(renewData, 2000);

    });
  }

  function buildGraph() {
    graph = new Dygraph(document.getElementById("chart"),
        data,
        {
          labels: ["x", "<%= @project.sensor1_name %>", "<%= @project.sensor2_name %>"]
        });
  }

  function to_f(v) {
    if (!v)
      return null;

    var converted = (v * 1.8) + 32;
    return Math.round(converted * 1000) / 1000.0;
  }

</script>


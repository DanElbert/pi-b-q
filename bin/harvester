#!/usr/bin/env ruby

require File.expand_path('../../config/environment', __FILE__)

def connect
  @serial = SerialPort.new('/dev/rfcomm0')
  @serial.sync = true
  @serial.binmode
  @conn = BlueTherm::SerialConnection.new(@serial)

  @conn.on_button { |m| puts "Button Pressed" }
  @conn.on_error { |m| puts "Bad Data: #{m}" }
  @conn.on_retrieve { |m| puts "Got Retrieve Packet at #{m.timestamp}" }
end

connected = false

connect

while true

  begin

    @conn.process_messages

    request = BlueTherm::Packet.temps
    response = @conn.send(request)

    unless connected
      connected = true
      ConnectionStatus.create!({is_connect: true, info: 'Connection Established'})
    end

    Reading.create!({value1: response.sensor_1_reading, value2: response.sensor_2_reading, timestamp: Time.now})

  rescue BlueTherm::TimeoutError, Errno::EIO => e

    new_disconnect = false

    if connected
      connected = false
      new_disconnect = true
    end

    ConnectionStatus.create!({is_disconnect: new_disconnect, info: "[#{e.class}]  #{e.message}"})

    @conn.close
    @serial.close

    connect
  end

  sleep 2

end
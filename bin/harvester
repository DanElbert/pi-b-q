#!/usr/bin/env ruby

require File.expand_path('../../config/environment', __FILE__)

def connect
  @serial = SerialPort.new('/dev/rfcomm0')
  @serial.binmode
  @conn = BlueTherm::SerialConnection.new(@serial)

  @conn.on_button { |m| puts "Button Pressed" }
  @conn.on_error { |m| puts "Bad Data: #{m}" }
  @conn.on_retrieve { |m| puts "Got Retrieve Packet at #{m.timestamp}" }
end

def c_to_f(c)
  ((c * 1.8) + 32).round(3)
end

failed = false

connect

while true

  begin

    @conn.process_messages

    request = BlueTherm::Packet.default
    response = @conn.send(request)

    if failed
      puts "Connection Resotred!"
      failed = false
    end

    puts "Sensor 1: #{c_to_f(response.sensor_1_reading)}"
    puts "Sensor 2: #{c_to_f(response.sensor_2_reading)}"

  rescue BlueTherm::TimeoutError, Errno::EIO => e

    unless failed
      puts 'lost connection...'
      failed = true
    end
    puts "#{e}"

    @conn.close
    @serial.close

    connect
  end

  sleep 2

end